//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1022
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1022 版自动生成。
// 
#pragma warning disable 1591

namespace ETS2.WebApp.cn.etown.image {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ImgUploadServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ImgUploadService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UpLoadAndSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelFileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ImgUploadService() {
            this.Url = global::ETS2.WebApp.Properties.Settings.Default.ETS2_WebApp_cn_etown_image_ImgUploadService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UpLoadAndSaveCompletedEventHandler UpLoadAndSaveCompleted;
        
        /// <remarks/>
        public event DelFileCompletedEventHandler DelFileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpLoadAndSave", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpLoadAndSave([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, ref string virPath, string fext) {
            object[] results = this.Invoke("UpLoadAndSave", new object[] {
                        data,
                        virPath,
                        fext});
            virPath = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpLoadAndSaveAsync(byte[] data, string virPath, string fext) {
            this.UpLoadAndSaveAsync(data, virPath, fext, null);
        }
        
        /// <remarks/>
        public void UpLoadAndSaveAsync(byte[] data, string virPath, string fext, object userState) {
            if ((this.UpLoadAndSaveOperationCompleted == null)) {
                this.UpLoadAndSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpLoadAndSaveOperationCompleted);
            }
            this.InvokeAsync("UpLoadAndSave", new object[] {
                        data,
                        virPath,
                        fext}, this.UpLoadAndSaveOperationCompleted, userState);
        }
        
        private void OnUpLoadAndSaveOperationCompleted(object arg) {
            if ((this.UpLoadAndSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpLoadAndSaveCompleted(this, new UpLoadAndSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelFile(string savepath) {
            this.Invoke("DelFile", new object[] {
                        savepath});
        }
        
        /// <remarks/>
        public void DelFileAsync(string savepath) {
            this.DelFileAsync(savepath, null);
        }
        
        /// <remarks/>
        public void DelFileAsync(string savepath, object userState) {
            if ((this.DelFileOperationCompleted == null)) {
                this.DelFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelFileOperationCompleted);
            }
            this.InvokeAsync("DelFile", new object[] {
                        savepath}, this.DelFileOperationCompleted, userState);
        }
        
        private void OnDelFileOperationCompleted(object arg) {
            if ((this.DelFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpLoadAndSaveCompletedEventHandler(object sender, UpLoadAndSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpLoadAndSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpLoadAndSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string virPath {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DelFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591